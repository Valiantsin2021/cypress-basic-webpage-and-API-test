{
  "stats": {
    "suites": 4,
    "tests": 23,
    "passes": 23,
    "pending": 0,
    "failures": 0,
    "start": "2022-08-21T16:34:50.339Z",
    "end": "2022-08-21T16:36:56.845Z",
    "duration": 89379,
    "testsRegistered": 23,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "ac08b7b8-42a8-44da-a5da-622699551d1c",
      "title": "",
      "fullFile": "cypress\\e2e\\simpleBookApi.cy.js",
      "file": "cypress\\e2e\\simpleBookApi.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "dcc07ed3-8268-467b-8839-8b8415b8ac6c",
          "title": "Open api url and test http requests GET, POST, PATCH and DELETE",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Open Simple Book api url and check response status code",
              "fullTitle": "Open api url and test http requests GET, POST, PATCH and DELETE Open Simple Book api url and check response status code",
              "timedOut": null,
              "duration": 778,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('https://simple-books-api.glitch.me/status').as('request');\ncy.get('@request').then(response => {\n  expect(response.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "4b71d962-44ea-4fa7-b739-fdaf60871d31",
              "parentUUID": "dcc07ed3-8268-467b-8839-8b8415b8ac6c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the authentification is already made and is impossible to do again with the same email",
              "fullTitle": "Open api url and test http requests GET, POST, PATCH and DELETE Check the authentification is already made and is impossible to do again with the same email",
              "timedOut": null,
              "duration": 208,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'POST',\n  url: 'https://simple-books-api.glitch.me/api-clients/',\n  failOnStatusCode: false,\n  body: {\n    clientName: \"ondra\",\n    clientEmail: \"me@mail.com\"\n  }\n}).as('authRequest');\ncy.get('@authRequest').then(response => {\n  expect(response.status).to.be.equal(409);\n  cy.wrap(response.body).should('deep.include', {\n    error: 'API client already registered. Try a different email.'\n  });\n});",
              "err": {},
              "uuid": "d33b58f6-c2b8-4b1e-a74b-7fe616375499",
              "parentUUID": "dcc07ed3-8268-467b-8839-8b8415b8ac6c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get list of all books from the api",
              "fullTitle": "Open api url and test http requests GET, POST, PATCH and DELETE Get list of all books from the api",
              "timedOut": null,
              "duration": 197,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('https://simple-books-api.glitch.me/books').as('booksRequest');\ncy.get('@booksRequest').then(response => {\n  expect(response.status).to.be.equal(200);\n  assert.isArray(response.body);\n  expect(response.body).have.length(6);\n});",
              "err": {},
              "uuid": "8b4052f0-a3ee-4b6b-91cc-4e8239219070",
              "parentUUID": "dcc07ed3-8268-467b-8839-8b8415b8ac6c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Filter the list of books from the api to non-fiction",
              "fullTitle": "Open api url and test http requests GET, POST, PATCH and DELETE Filter the list of books from the api to non-fiction",
              "timedOut": null,
              "duration": 255,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: 'https://simple-books-api.glitch.me/books',\n  qs: {\n    type: 'non-fiction'\n  }\n}).as('nonFiction');\ncy.get('@nonFiction').then(response => {\n  expect(response.status).to.be.equal(200);\n  assert.isArray(response.body);\n  expect(response.body).have.length(2);\n  cy.wrap(response.body[0]).should('deep.include', {\n    id: 2,\n    name: \"Just as I Am\",\n    type: \"non-fiction\",\n    available: false\n  });\n  cy.wrap(response.body[1]).should('contain', {\n    available: true\n  });\n});",
              "err": {},
              "uuid": "2c47318b-a723-4dee-90a5-755decac7ee6",
              "parentUUID": "dcc07ed3-8268-467b-8839-8b8415b8ac6c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Find one book with id \"5\" and check it is available",
              "fullTitle": "Open api url and test http requests GET, POST, PATCH and DELETE Find one book with id \"5\" and check it is available",
              "timedOut": null,
              "duration": 215,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://simple-books-api.glitch.me/books/${bookId}`\n}).as('singleBook');\ncy.get('@singleBook').then(response => {\n  expect(response.status).to.be.equal(200);\n  cy.wrap(response.body).should('deep.include', {\n    \"id\": 5,\n    \"name\": \"Untamed\",\n    \"author\": \"Glennon Doyle\",\n    \"type\": \"non-fiction\",\n    \"price\": 15.5,\n    \"current-stock\": 20,\n    \"available\": true\n  });\n});",
              "err": {},
              "uuid": "73183c8e-2379-490d-929a-d3572d85bd02",
              "parentUUID": "dcc07ed3-8268-467b-8839-8b8415b8ac6c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Order the book with id \"5\" and check it order number",
              "fullTitle": "Open api url and test http requests GET, POST, PATCH and DELETE Order the book with id \"5\" and check it order number",
              "timedOut": null,
              "duration": 333,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'POST',\n  url: `https://simple-books-api.glitch.me/orders`,\n  auth: {\n    bearer: authToken\n  },\n  body: {\n    bookId: bookId,\n    clientName: \"Valentin\"\n  }\n}).as('order');\ncy.get('@order').then(response => {\n  expect(response.status).to.be.equal(201);\n  expect(response.body.created).to.be.true;\n  expect(response.body).to.include.key('orderId');\n  orderId = response.body.orderId;\n});",
              "err": {},
              "uuid": "fcac9614-2b6d-48bf-bdf0-bd113cfa505f",
              "parentUUID": "dcc07ed3-8268-467b-8839-8b8415b8ac6c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the order: undefined is existing",
              "fullTitle": "Open api url and test http requests GET, POST, PATCH and DELETE Check the order: undefined is existing",
              "timedOut": null,
              "duration": 322,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://simple-books-api.glitch.me/orders`,\n  auth: {\n    bearer: authToken\n  }\n}).as('order');\ncy.get('@order').then(response => {\n  expect(response.status).to.be.equal(200);\n  expect(response.body).to.have.length(1);\n  expect(response.body[0]).to.include.key('id', 'quantity');\n  expect(response.body[0].id).to.equal(orderId);\n  expect(response.body[0].quantity).to.equal(1);\n});",
              "err": {},
              "uuid": "3efc161a-fb66-4a1b-9d3a-6a1ec4bcd821",
              "parentUUID": "dcc07ed3-8268-467b-8839-8b8415b8ac6c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Change customers name in order: undefined using PATCH method and check the orders customer name is changed",
              "fullTitle": "Open api url and test http requests GET, POST, PATCH and DELETE Change customers name in order: undefined using PATCH method and check the orders customer name is changed",
              "timedOut": null,
              "duration": 684,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'PATCH',\n  url: `https://simple-books-api.glitch.me/orders/${orderId}`,\n  auth: {\n    bearer: authToken\n  },\n  body: {\n    customerName: 'Val'\n  }\n}).as('order');\ncy.get('@order').then(response => {\n  expect(response.status).to.be.equal(204);\n});\ncy.request({\n  method: 'GET',\n  url: `https://simple-books-api.glitch.me/orders`,\n  auth: {\n    bearer: authToken\n  }\n}).as('order');\ncy.get('@order').then(response => {\n  expect(response.status).to.be.equal(200);\n  expect(response.body[0]).to.include.key('customerName');\n  expect(response.body[0].customerName).to.eql('Val');\n});",
              "err": {},
              "uuid": "224d447b-fb01-4624-bd35-8ceca1735dc6",
              "parentUUID": "dcc07ed3-8268-467b-8839-8b8415b8ac6c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete the order: undefined and check there are no active orders",
              "fullTitle": "Open api url and test http requests GET, POST, PATCH and DELETE Delete the order: undefined and check there are no active orders",
              "timedOut": null,
              "duration": 995,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'DELETE',\n  url: `https://simple-books-api.glitch.me/orders/${orderId}`,\n  auth: {\n    bearer: authToken\n  }\n}).as('delOrder');\ncy.get('@delOrder').then(response => {\n  expect(response.status).to.be.equal(204);\n});\ncy.request({\n  method: 'GET',\n  url: `https://simple-books-api.glitch.me/orders`,\n  auth: {\n    bearer: authToken\n  }\n}).as('order');\ncy.get('@order').then(response => {\n  expect(response.status).to.be.equal(200);\n  expect(response.body).to.have.length(0);\n});",
              "err": {},
              "uuid": "b43af2d4-f22b-44a3-b874-cc3785f1a616",
              "parentUUID": "dcc07ed3-8268-467b-8839-8b8415b8ac6c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4b71d962-44ea-4fa7-b739-fdaf60871d31",
            "d33b58f6-c2b8-4b1e-a74b-7fe616375499",
            "8b4052f0-a3ee-4b6b-91cc-4e8239219070",
            "2c47318b-a723-4dee-90a5-755decac7ee6",
            "73183c8e-2379-490d-929a-d3572d85bd02",
            "fcac9614-2b6d-48bf-bdf0-bd113cfa505f",
            "3efc161a-fb66-4a1b-9d3a-6a1ec4bcd821",
            "224d447b-fb01-4624-bd35-8ceca1735dc6",
            "b43af2d4-f22b-44a3-b874-cc3785f1a616"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3987,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "fbf1ff7e-38f6-496c-979f-013974058d51",
      "title": "",
      "fullFile": "cypress\\e2e\\testJsonPlaceHolderApi.cy.js",
      "file": "cypress\\e2e\\testJsonPlaceHolderApi.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "af4977f0-235b-42a3-a61e-eb83f38966b6",
          "title": "open api url and test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "open api url and check response status code",
              "fullTitle": "open api url and test open api url and check response status code",
              "timedOut": null,
              "duration": 327,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('https://jsonplaceholder.typicode.com/todos').as('todoRequest').its('body').should('have.length', 200);\ncy.get('@todoRequest').then(response => {\n  expect(response.status).to.be.equal(200);\n  assert.isArray(response.body, 'Todos response is an array');\n});",
              "err": {},
              "uuid": "13a3c91e-db1f-469b-a635-1e59bfa312bb",
              "parentUUID": "af4977f0-235b-42a3-a61e-eb83f38966b6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check post method status code",
              "fullTitle": "open api url and test Check post method status code",
              "timedOut": null,
              "duration": 98,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('GET', 'https://jsonplaceholder.typicode.com/todos', {\n  title: \"eightdelectus aut autem\",\n  userId: 1\n}).as('todoRequest');\ncy.get('@todoRequest').then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "1d30bf31-a95f-451f-bb06-1b1c34141869",
              "parentUUID": "af4977f0-235b-42a3-a61e-eb83f38966b6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check post method status code",
              "fullTitle": "open api url and test Check post method status code",
              "timedOut": null,
              "duration": 289,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('POST', 'https://jsonplaceholder.typicode.com/todos', {\n  userId: \"11\",\n  title: 'My title',\n  completed: true\n}).as('todoRequest'); // adds new Todo item by defining Todo name\ncy.get('@todoRequest').then(response => {\n  expect(response.status).to.eq(201);\n  cy.wrap(response.body).should('deep.include', {\n    userId: '11',\n    id: 201,\n    title: 'My title',\n    completed: true\n  });\n});",
              "err": {},
              "uuid": "81957ec7-2cf1-4b42-a940-9c9d94871ace",
              "parentUUID": "af4977f0-235b-42a3-a61e-eb83f38966b6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "13a3c91e-db1f-469b-a635-1e59bfa312bb",
            "1d30bf31-a95f-451f-bb06-1b1c34141869",
            "81957ec7-2cf1-4b42-a940-9c9d94871ace"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 714,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "6d205300-08d5-45c3-bcc7-cf5163ed6cca",
      "title": "",
      "fullFile": "cypress\\e2e\\wikipedia.cy.js",
      "file": "cypress\\e2e\\wikipedia.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6ccfd0c8-5a85-4ec1-8209-a51f1e035239",
          "title": "Opens wikipedia website and search for Estación de Atocha-Cercanías page",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Opens wikipedia website and check the language is Spanish",
              "fullTitle": "Opens wikipedia website and search for Estación de Atocha-Cercanías page Opens wikipedia website and check the language is Spanish",
              "timedOut": null,
              "duration": 3807,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://www.wikipedia.org/');\ncy.contains('Español');\ncy.get('#js-link-box-es').click();",
              "err": {},
              "uuid": "5a5195a3-de86-44c2-bfdb-192684219323",
              "parentUUID": "6ccfd0c8-5a85-4ec1-8209-a51f1e035239",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Searches text \"atocha\" in Spanish Wikipedia",
              "fullTitle": "Opens wikipedia website and search for Estación de Atocha-Cercanías page Searches text \"atocha\" in Spanish Wikipedia",
              "timedOut": null,
              "duration": 1740,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#searchInput').type('atocha');\ncy.get('#searchButton').click();\ncy.url().should('include', 'https://es.wikipedia.org/wiki/Atocha');",
              "err": {},
              "uuid": "3efd88fe-c00d-4658-8bab-6ee108eee7d6",
              "parentUUID": "6ccfd0c8-5a85-4ec1-8209-a51f1e035239",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Selects \"Atocha-Cercanías\" link",
              "fullTitle": "Opens wikipedia website and search for Estación de Atocha-Cercanías page Selects \"Atocha-Cercanías\" link",
              "timedOut": null,
              "duration": 3072,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Atocha');\ncy.get('a[title=\"Estación de Atocha-Cercanías\"]').eq(0).should('to.have.attr', 'href', '/wiki/Estaci%C3%B3n_de_Atocha-Cercan%C3%ADas').click({\n  multiple: true\n});",
              "err": {},
              "uuid": "8fa879a6-1445-4f78-990d-bc2236175765",
              "parentUUID": "6ccfd0c8-5a85-4ec1-8209-a51f1e035239",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the image is present on the \"Atocha-Cercanias\" page",
              "fullTitle": "Opens wikipedia website and search for Estación de Atocha-Cercanías page Check the image is present on the \"Atocha-Cercanias\" page",
              "timedOut": null,
              "duration": 7821,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('img[alt=\"Estación de Atocha (Madrid) 02.jpg\"]').should('be.visible');\ncy.screenshot('my-image');",
              "err": {},
              "uuid": "1c9a3cbe-20c7-40ad-a6b8-4e5f788aa93c",
              "parentUUID": "6ccfd0c8-5a85-4ec1-8209-a51f1e035239",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Checks the presence and contain of Situacion ferrovialia list on the page",
              "fullTitle": "Opens wikipedia website and search for Estación de Atocha-Cercanías page Checks the presence and contain of Situacion ferrovialia list on the page",
              "timedOut": null,
              "duration": 8844,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#mw-content-text  ul:nth-child(7) > li').should('exist').eq(0).should('to.contain.text', 'punto kilométrico 0,0.');\ncy.get('#mw-content-text  ul:nth-child(7) > li').eq(1).should('to.have.descendants', 'a');\ncy.get('#mw-content-text  ul:nth-child(7) > li').eq(2).should('contain', ', punto kilométrico 7,5.');\ncy.screenshot('my-image1');",
              "err": {},
              "uuid": "074b2283-10a6-47f2-98ac-017191b65707",
              "parentUUID": "6ccfd0c8-5a85-4ec1-8209-a51f1e035239",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5a5195a3-de86-44c2-bfdb-192684219323",
            "3efd88fe-c00d-4658-8bab-6ee108eee7d6",
            "8fa879a6-1445-4f78-990d-bc2236175765",
            "1c9a3cbe-20c7-40ad-a6b8-4e5f788aa93c",
            "074b2283-10a6-47f2-98ac-017191b65707"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 25284,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "393fb6cc-6074-42e4-a619-aac33f36a2e0",
      "title": "",
      "fullFile": "cypress\\e2e\\ebay.cy.js",
      "file": "cypress\\e2e\\ebay.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1fc9356e-b848-48a4-830c-6db8596b7fb8",
          "title": "Opens ebay.es and searches for watches Suunto 9",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should open ebay.com",
              "fullTitle": "Opens ebay.es and searches for watches Suunto 9 Should open ebay.com",
              "timedOut": null,
              "duration": 4118,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://ebay.es');\ncy.title().should('eq', 'Comprar y Vender Electrónica, Moda, Móviles y mucho más | eBay');",
              "err": {},
              "uuid": "fd5e5e15-3d06-4928-9905-ad1de64e9c23",
              "parentUUID": "1fc9356e-b848-48a4-830c-6db8596b7fb8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should open \"Electronica\" link on ebay.com",
              "fullTitle": "Opens ebay.es and searches for watches Suunto 9 Should open \"Electronica\" link on ebay.com",
              "timedOut": null,
              "duration": 7043,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.screenshot('Ebay');\ncy.get(\"#mainContent > div.hl-cat-nav > ul > li:nth-child(3) > a\").should('be.visible').click();",
              "err": {},
              "uuid": "952f7d9c-d971-427a-b60a-b7c9149561dc",
              "parentUUID": "1fc9356e-b848-48a4-830c-6db8596b7fb8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should open \"Relojes inteligentes\" link on ebay.com",
              "fullTitle": "Opens ebay.es and searches for watches Suunto 9 Should open \"Relojes inteligentes\" link on ebay.com",
              "timedOut": null,
              "duration": 5152,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.screenshot('Ebay-Electroinca');\ncy.get(\"section.b-module.b-visualnav  a:nth-child(8)\").should('be.visible').click();",
              "err": {},
              "uuid": "0ba5a750-752e-4052-b457-0fa1ed339064",
              "parentUUID": "1fc9356e-b848-48a4-830c-6db8596b7fb8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should search for \"Suunto 9\" smartwatch on ebay.com",
              "fullTitle": "Opens ebay.es and searches for watches Suunto 9 Should search for \"Suunto 9\" smartwatch on ebay.com",
              "timedOut": null,
              "duration": 26856,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.screenshot('Ebay-Electronica-Relojes');\ncy.url().should('include', '/b/Smartwatches/');\ncy.get('input.gh-tb.ui-autocomplete-input').type('Suunto 9');\ncy.get('#gh-btn').click();\ncy.screenshot('Suunto-9');\ncy.get(\"img[alt='Reloj deportivo - Suunto 9, Negro, Pulsómetro, Barómetro, 120 horas Autonomía']\").should('have.attr', 'src'); // cy.get('div.s-item__detail.s-item__detail--primary > span.s-item__price')\n//   .eq(1)\n//   .should('contain.text', '266,85 EUR')\ncy.get('#srp-river-results > ul > li:nth-child(1) > div > div.s-item__info.clearfix > a > h3').should('contain.text', 'Suunto 9');",
              "err": {},
              "uuid": "0f2409bc-a9ad-4312-9453-53089afffca7",
              "parentUUID": "1fc9356e-b848-48a4-830c-6db8596b7fb8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should search the \"Suunto 9 Negro\" smartwatch on ebay.com using checkbox",
              "fullTitle": "Opens ebay.es and searches for watches Suunto 9 Should search the \"Suunto 9 Negro\" smartwatch on ebay.com using checkbox",
              "timedOut": null,
              "duration": 3986,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('input[aria-label=\"Negro\"]').should('exist').eq(0).check();",
              "err": {},
              "uuid": "9b88b1a3-1196-47a9-9186-640e6a5641e4",
              "parentUUID": "1fc9356e-b848-48a4-830c-6db8596b7fb8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should check the existense of \"Suunto 9 Negro\" smartwatch on ebay.com",
              "fullTitle": "Opens ebay.es and searches for watches Suunto 9 Should check the existense of \"Suunto 9 Negro\" smartwatch on ebay.com",
              "timedOut": null,
              "duration": 12239,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// cy.get('div.s-item__detail.s-item__detail--primary > span.s-item__price')\n//   .eq(1)\n//   .should('have.text', '369,00 EUR')\ncy.screenshot('Suunto-9-Negro');\ncy.get(\"img[alt='Reloj deportivo - Suunto 9, Negro, Pulsómetro, Barómetro, 120 horas Autonomía']\").should('have.attr', 'src');\ncy.get('#srp-river-results > ul > li:nth-child(2) > div > div.s-item__info.clearfix > a > h3').should('contain.text', 'Reloj deportivo - Suunto 9');",
              "err": {},
              "uuid": "2ddc1e10-8300-430a-a433-0b976538ad0d",
              "parentUUID": "1fc9356e-b848-48a4-830c-6db8596b7fb8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fd5e5e15-3d06-4928-9905-ad1de64e9c23",
            "952f7d9c-d971-427a-b60a-b7c9149561dc",
            "0ba5a750-752e-4052-b457-0fa1ed339064",
            "0f2409bc-a9ad-4312-9453-53089afffca7",
            "9b88b1a3-1196-47a9-9186-640e6a5641e4",
            "2ddc1e10-8300-430a-a433-0b976538ad0d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 59394,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/results",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}