{
  "stats": {
    "suites": 1,
    "tests": 9,
    "passes": 5,
    "pending": 0,
    "failures": 4,
    "start": "2022-09-01T20:08:26.051Z",
    "end": "2022-09-01T20:08:29.692Z",
    "duration": 3641,
    "testsRegistered": 9,
    "passPercent": 55.55555555555556,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "1f4a4a4b-de97-4daa-90e8-e99a5818d6b3",
      "title": "",
      "fullFile": "cypress\\e2e\\simpleBookApi.cy.js",
      "file": "cypress\\e2e\\simpleBookApi.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3060120b-1396-4ca2-8d35-ebe51b7d02f0",
          "title": "Open Simple Book api url and test http requests GET, POST, PATCH and DELETE",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Open Simple Book api url and check response status code",
              "fullTitle": "Open Simple Book api url and test http requests GET, POST, PATCH and DELETE Open Simple Book api url and check response status code",
              "timedOut": null,
              "duration": 750,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('https://simple-books-api.glitch.me/status').as('request');\ncy.get('@request').then(response => {\n  expect(response.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "721f9ef8-4a76-4748-8881-80e8549cd054",
              "parentUUID": "3060120b-1396-4ca2-8d35-ebe51b7d02f0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the authentification is already made and is impossible to do again with the same email",
              "fullTitle": "Open Simple Book api url and test http requests GET, POST, PATCH and DELETE Check the authentification is already made and is impossible to do again with the same email",
              "timedOut": null,
              "duration": 184,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'POST',\n  url: 'https://simple-books-api.glitch.me/api-clients/',\n  failOnStatusCode: false,\n  body: {\n    clientName: \"ondra\",\n    clientEmail: \"me@mail.com\"\n  }\n}).as('authRequest');\ncy.get('@authRequest').then(response => {\n  expect(response.status).to.be.equal(409);\n  cy.wrap(response.body).should('deep.include', {\n    error: 'API client already registered. Try a different email.'\n  });\n});",
              "err": {},
              "uuid": "e796e6d3-a252-422e-aa9e-5aa271b8a221",
              "parentUUID": "3060120b-1396-4ca2-8d35-ebe51b7d02f0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get list of all books from the api",
              "fullTitle": "Open Simple Book api url and test http requests GET, POST, PATCH and DELETE Get list of all books from the api",
              "timedOut": null,
              "duration": 199,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('https://simple-books-api.glitch.me/books').as('booksRequest');\ncy.get('@booksRequest').then(response => {\n  expect(response.status).to.be.equal(200);\n  assert.isArray(response.body);\n  expect(response.body).have.length(6);\n});",
              "err": {},
              "uuid": "d4b61df4-e12a-4879-8864-0acbcb36655f",
              "parentUUID": "3060120b-1396-4ca2-8d35-ebe51b7d02f0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Filter the list of books from the api to non-fiction",
              "fullTitle": "Open Simple Book api url and test http requests GET, POST, PATCH and DELETE Filter the list of books from the api to non-fiction",
              "timedOut": null,
              "duration": 261,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: 'https://simple-books-api.glitch.me/books',\n  qs: {\n    type: 'non-fiction'\n  }\n}).as('nonFiction');\ncy.get('@nonFiction').then(response => {\n  expect(response.status).to.be.equal(200);\n  assert.isArray(response.body);\n  expect(response.body).have.length(2);\n  cy.wrap(response.body[0]).should('deep.include', {\n    id: 2,\n    name: \"Just as I Am\",\n    type: \"non-fiction\",\n    available: false\n  });\n  cy.wrap(response.body[1]).should('contain', {\n    available: true\n  });\n});",
              "err": {},
              "uuid": "5dd2e6be-09be-4ea9-a454-da52aee2a5a3",
              "parentUUID": "3060120b-1396-4ca2-8d35-ebe51b7d02f0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Find one book with id \"5\" and check it is available",
              "fullTitle": "Open Simple Book api url and test http requests GET, POST, PATCH and DELETE Find one book with id \"5\" and check it is available",
              "timedOut": null,
              "duration": 179,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://simple-books-api.glitch.me/books/${bookId}`\n}).as('singleBook');\ncy.get('@singleBook').then(response => {\n  expect(response.status).to.be.equal(200);\n  cy.wrap(response.body).should('deep.include', {\n    \"id\": 5,\n    \"name\": \"Untamed\",\n    \"author\": \"Glennon Doyle\",\n    \"type\": \"non-fiction\",\n    \"price\": 15.5,\n    \"current-stock\": 20,\n    \"available\": true\n  });\n});",
              "err": {},
              "uuid": "9daa6928-3697-43ad-9d5a-c2c3a000c9cd",
              "parentUUID": "3060120b-1396-4ca2-8d35-ebe51b7d02f0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Order the book with id \"5\" and check it order number",
              "fullTitle": "Open Simple Book api url and test http requests GET, POST, PATCH and DELETE Order the book with id \"5\" and check it order number",
              "timedOut": null,
              "duration": 460,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'POST',\n  url: `https://simple-books-api.glitch.me/orders`,\n  auth: {\n    bearer: authToken\n  },\n  body: {\n    bookId: bookId,\n    clientName: \"Valentin\"\n  }\n}).as('order');\ncy.get('@order').then(response => {\n  expect(response.status).to.be.equal(201);\n  expect(response.body.created).to.be.true;\n  expect(response.body).to.include.key('orderId');\n  orderId = response.body.orderId;\n});",
              "err": {
                "message": "CypressError: `cy.request()` failed on:\n\nhttps://simple-books-api.glitch.me/orders\n\nThe response we received from your web server was:\n\n  > 401: Unauthorized\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: POST\nURL: https://simple-books-api.glitch.me/orders\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/10.7.0 Chrome/102.0.5005.148 Electron/19.0.8 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"authorization\": \"Bearer beb97f238459e7d07e54f51c9fd2c847c38706e05fab484d20a79adb09efe302\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-type\": \"application/json\",\n  \"content-length\": 36\n}\nBody: {\"bookId\":5,\"clientName\":\"Valentin\"}\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 401 - Unauthorized\nHeaders: {\n  \"date\": \"Thu, 01 Sep 2022 20:08:28 GMT\",\n  \"content-type\": \"application/json; charset=utf-8\",\n  \"content-length\": \"33\",\n  \"connection\": \"keep-alive\",\n  \"x-powered-by\": \"Express\",\n  \"etag\": \"W/\\\"21-bG6N9MGZ9+XoO/KuGDSYhW5FJyc\\\"\"\n}\nBody: {\n  \"error\": \"Invalid bearer token.\"\n}\n\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` failed on:\n\nhttps://simple-books-api.glitch.me/orders\n\nThe response we received from your web server was:\n\n  > 401: Unauthorized\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: POST\nURL: https://simple-books-api.glitch.me/orders\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/10.7.0 Chrome/102.0.5005.148 Electron/19.0.8 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"authorization\": \"Bearer beb97f238459e7d07e54f51c9fd2c847c38706e05fab484d20a79adb09efe302\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-type\": \"application/json\",\n  \"content-length\": 36\n}\nBody: {\"bookId\":5,\"clientName\":\"Valentin\"}\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 401 - Unauthorized\nHeaders: {\n  \"date\": \"Thu, 01 Sep 2022 20:08:28 GMT\",\n  \"content-type\": \"application/json; charset=utf-8\",\n  \"content-length\": \"33\",\n  \"connection\": \"keep-alive\",\n  \"x-powered-by\": \"Express\",\n  \"etag\": \"W/\\\"21-bG6N9MGZ9+XoO/KuGDSYhW5FJyc\\\"\"\n}\nBody: {\n  \"error\": \"Invalid bearer token.\"\n}\n\n\nhttps://on.cypress.io/request\n    at http://localhost:54717/__cypress/runner/cypress_runner.js:143948:80\n    at tryCatcher (http://localhost:54717/__cypress/runner/cypress_runner.js:11318:23)\n    at Promise._settlePromiseFromHandler (http://localhost:54717/__cypress/runner/cypress_runner.js:9253:31)\n    at Promise._settlePromise (http://localhost:54717/__cypress/runner/cypress_runner.js:9310:18)\n    at Promise._settlePromise0 (http://localhost:54717/__cypress/runner/cypress_runner.js:9355:10)\n    at Promise._settlePromises (http://localhost:54717/__cypress/runner/cypress_runner.js:9435:18)\n    at _drainQueueStep (http://localhost:54717/__cypress/runner/cypress_runner.js:6025:12)\n    at _drainQueue (http://localhost:54717/__cypress/runner/cypress_runner.js:6018:9)\n    at ../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:54717/__cypress/runner/cypress_runner.js:6034:5)\n    at Async.drainQueues (http://localhost:54717/__cypress/runner/cypress_runner.js:5904:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:54717/__cypress/tests?p=cypress\\e2e\\simpleBookApi.cy.js:176:8)",
                "diff": null
              },
              "uuid": "6c9dc6b2-8cfd-43f5-8631-6aa54c5a7938",
              "parentUUID": "3060120b-1396-4ca2-8d35-ebe51b7d02f0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the order: undefined is existing",
              "fullTitle": "Open Simple Book api url and test http requests GET, POST, PATCH and DELETE Check the order: undefined is existing",
              "timedOut": null,
              "duration": 440,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://simple-books-api.glitch.me/orders`,\n  auth: {\n    bearer: authToken\n  }\n}).as('order');\ncy.get('@order').then(response => {\n  expect(response.status).to.be.equal(200);\n  expect(response.body).to.have.length(1);\n  expect(response.body[0]).to.include.key('id', 'quantity');\n  expect(response.body[0].id).to.equal(orderId);\n  expect(response.body[0].quantity).to.equal(1);\n});",
              "err": {
                "message": "CypressError: `cy.request()` failed on:\n\nhttps://simple-books-api.glitch.me/orders\n\nThe response we received from your web server was:\n\n  > 401: Unauthorized\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: GET\nURL: https://simple-books-api.glitch.me/orders\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/10.7.0 Chrome/102.0.5005.148 Electron/19.0.8 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"authorization\": \"Bearer beb97f238459e7d07e54f51c9fd2c847c38706e05fab484d20a79adb09efe302\",\n  \"accept-encoding\": \"gzip, deflate\"\n}\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 401 - Unauthorized\nHeaders: {\n  \"date\": \"Thu, 01 Sep 2022 20:08:29 GMT\",\n  \"content-type\": \"application/json; charset=utf-8\",\n  \"content-length\": \"33\",\n  \"connection\": \"keep-alive\",\n  \"x-powered-by\": \"Express\",\n  \"etag\": \"W/\\\"21-bG6N9MGZ9+XoO/KuGDSYhW5FJyc\\\"\"\n}\nBody: {\n  \"error\": \"Invalid bearer token.\"\n}\n\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` failed on:\n\nhttps://simple-books-api.glitch.me/orders\n\nThe response we received from your web server was:\n\n  > 401: Unauthorized\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: GET\nURL: https://simple-books-api.glitch.me/orders\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/10.7.0 Chrome/102.0.5005.148 Electron/19.0.8 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"authorization\": \"Bearer beb97f238459e7d07e54f51c9fd2c847c38706e05fab484d20a79adb09efe302\",\n  \"accept-encoding\": \"gzip, deflate\"\n}\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 401 - Unauthorized\nHeaders: {\n  \"date\": \"Thu, 01 Sep 2022 20:08:29 GMT\",\n  \"content-type\": \"application/json; charset=utf-8\",\n  \"content-length\": \"33\",\n  \"connection\": \"keep-alive\",\n  \"x-powered-by\": \"Express\",\n  \"etag\": \"W/\\\"21-bG6N9MGZ9+XoO/KuGDSYhW5FJyc\\\"\"\n}\nBody: {\n  \"error\": \"Invalid bearer token.\"\n}\n\n\nhttps://on.cypress.io/request\n    at http://localhost:54717/__cypress/runner/cypress_runner.js:143948:80\n    at tryCatcher (http://localhost:54717/__cypress/runner/cypress_runner.js:11318:23)\n    at Promise._settlePromiseFromHandler (http://localhost:54717/__cypress/runner/cypress_runner.js:9253:31)\n    at Promise._settlePromise (http://localhost:54717/__cypress/runner/cypress_runner.js:9310:18)\n    at Promise._settlePromise0 (http://localhost:54717/__cypress/runner/cypress_runner.js:9355:10)\n    at Promise._settlePromises (http://localhost:54717/__cypress/runner/cypress_runner.js:9435:18)\n    at _drainQueueStep (http://localhost:54717/__cypress/runner/cypress_runner.js:6025:12)\n    at _drainQueue (http://localhost:54717/__cypress/runner/cypress_runner.js:6018:9)\n    at ../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:54717/__cypress/runner/cypress_runner.js:6034:5)\n    at Async.drainQueues (http://localhost:54717/__cypress/runner/cypress_runner.js:5904:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:54717/__cypress/tests?p=cypress\\e2e\\simpleBookApi.cy.js:195:8)",
                "diff": null
              },
              "uuid": "e33658ea-1131-4c15-9aca-6b121e34fa98",
              "parentUUID": "3060120b-1396-4ca2-8d35-ebe51b7d02f0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Change customers name in order: undefined using PATCH method and check the orders customer name is changed",
              "fullTitle": "Open Simple Book api url and test http requests GET, POST, PATCH and DELETE Change customers name in order: undefined using PATCH method and check the orders customer name is changed",
              "timedOut": null,
              "duration": 481,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'PATCH',\n  url: `https://simple-books-api.glitch.me/orders/${orderId}`,\n  auth: {\n    bearer: authToken\n  },\n  body: {\n    customerName: 'Val'\n  }\n}).as('order');\ncy.get('@order').then(response => {\n  expect(response.status).to.be.equal(204);\n});\ncy.request({\n  method: 'GET',\n  url: `https://simple-books-api.glitch.me/orders`,\n  auth: {\n    bearer: authToken\n  }\n}).as('order');\ncy.get('@order').then(response => {\n  expect(response.status).to.be.equal(200);\n  expect(response.body[0]).to.include.key('customerName');\n  expect(response.body[0].customerName).to.eql('Val');\n});",
              "err": {
                "message": "CypressError: `cy.request()` failed on:\n\nhttps://simple-books-api.glitch.me/orders/undefined\n\nThe response we received from your web server was:\n\n  > 401: Unauthorized\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: PATCH\nURL: https://simple-books-api.glitch.me/orders/undefined\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/10.7.0 Chrome/102.0.5005.148 Electron/19.0.8 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"authorization\": \"Bearer beb97f238459e7d07e54f51c9fd2c847c38706e05fab484d20a79adb09efe302\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-type\": \"application/json\",\n  \"content-length\": 22\n}\nBody: {\"customerName\":\"Val\"}\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 401 - Unauthorized\nHeaders: {\n  \"date\": \"Thu, 01 Sep 2022 20:08:29 GMT\",\n  \"content-type\": \"application/json; charset=utf-8\",\n  \"content-length\": \"33\",\n  \"connection\": \"keep-alive\",\n  \"x-powered-by\": \"Express\",\n  \"etag\": \"W/\\\"21-bG6N9MGZ9+XoO/KuGDSYhW5FJyc\\\"\"\n}\nBody: {\n  \"error\": \"Invalid bearer token.\"\n}\n\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` failed on:\n\nhttps://simple-books-api.glitch.me/orders/undefined\n\nThe response we received from your web server was:\n\n  > 401: Unauthorized\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: PATCH\nURL: https://simple-books-api.glitch.me/orders/undefined\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/10.7.0 Chrome/102.0.5005.148 Electron/19.0.8 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"authorization\": \"Bearer beb97f238459e7d07e54f51c9fd2c847c38706e05fab484d20a79adb09efe302\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-type\": \"application/json\",\n  \"content-length\": 22\n}\nBody: {\"customerName\":\"Val\"}\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 401 - Unauthorized\nHeaders: {\n  \"date\": \"Thu, 01 Sep 2022 20:08:29 GMT\",\n  \"content-type\": \"application/json; charset=utf-8\",\n  \"content-length\": \"33\",\n  \"connection\": \"keep-alive\",\n  \"x-powered-by\": \"Express\",\n  \"etag\": \"W/\\\"21-bG6N9MGZ9+XoO/KuGDSYhW5FJyc\\\"\"\n}\nBody: {\n  \"error\": \"Invalid bearer token.\"\n}\n\n\nhttps://on.cypress.io/request\n    at http://localhost:54717/__cypress/runner/cypress_runner.js:143948:80\n    at tryCatcher (http://localhost:54717/__cypress/runner/cypress_runner.js:11318:23)\n    at Promise._settlePromiseFromHandler (http://localhost:54717/__cypress/runner/cypress_runner.js:9253:31)\n    at Promise._settlePromise (http://localhost:54717/__cypress/runner/cypress_runner.js:9310:18)\n    at Promise._settlePromise0 (http://localhost:54717/__cypress/runner/cypress_runner.js:9355:10)\n    at Promise._settlePromises (http://localhost:54717/__cypress/runner/cypress_runner.js:9435:18)\n    at _drainQueueStep (http://localhost:54717/__cypress/runner/cypress_runner.js:6025:12)\n    at _drainQueue (http://localhost:54717/__cypress/runner/cypress_runner.js:6018:9)\n    at ../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:54717/__cypress/runner/cypress_runner.js:6034:5)\n    at Async.drainQueues (http://localhost:54717/__cypress/runner/cypress_runner.js:5904:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:54717/__cypress/tests?p=cypress\\e2e\\simpleBookApi.cy.js:211:8)",
                "diff": null
              },
              "uuid": "79384bad-b8b4-4bad-bb14-da0d61df881c",
              "parentUUID": "3060120b-1396-4ca2-8d35-ebe51b7d02f0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete the order: undefined and check there are no active orders",
              "fullTitle": "Open Simple Book api url and test http requests GET, POST, PATCH and DELETE Delete the order: undefined and check there are no active orders",
              "timedOut": null,
              "duration": 421,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'DELETE',\n  url: `https://simple-books-api.glitch.me/orders/${orderId}`,\n  auth: {\n    bearer: authToken\n  }\n}).as('delOrder');\ncy.get('@delOrder').then(response => {\n  expect(response.status).to.be.equal(204);\n});\ncy.request({\n  method: 'GET',\n  url: `https://simple-books-api.glitch.me/orders`,\n  auth: {\n    bearer: authToken\n  }\n}).as('order');\ncy.get('@order').then(response => {\n  expect(response.status).to.be.equal(200);\n  expect(response.body).to.have.length(0);\n});",
              "err": {
                "message": "CypressError: `cy.request()` failed on:\n\nhttps://simple-books-api.glitch.me/orders/undefined\n\nThe response we received from your web server was:\n\n  > 401: Unauthorized\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: DELETE\nURL: https://simple-books-api.glitch.me/orders/undefined\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/10.7.0 Chrome/102.0.5005.148 Electron/19.0.8 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"authorization\": \"Bearer beb97f238459e7d07e54f51c9fd2c847c38706e05fab484d20a79adb09efe302\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-length\": 0\n}\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 401 - Unauthorized\nHeaders: {\n  \"date\": \"Thu, 01 Sep 2022 20:08:30 GMT\",\n  \"content-type\": \"application/json; charset=utf-8\",\n  \"content-length\": \"33\",\n  \"connection\": \"keep-alive\",\n  \"x-powered-by\": \"Express\",\n  \"etag\": \"W/\\\"21-bG6N9MGZ9+XoO/KuGDSYhW5FJyc\\\"\"\n}\nBody: {\n  \"error\": \"Invalid bearer token.\"\n}\n\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` failed on:\n\nhttps://simple-books-api.glitch.me/orders/undefined\n\nThe response we received from your web server was:\n\n  > 401: Unauthorized\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: DELETE\nURL: https://simple-books-api.glitch.me/orders/undefined\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/10.7.0 Chrome/102.0.5005.148 Electron/19.0.8 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"authorization\": \"Bearer beb97f238459e7d07e54f51c9fd2c847c38706e05fab484d20a79adb09efe302\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-length\": 0\n}\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 401 - Unauthorized\nHeaders: {\n  \"date\": \"Thu, 01 Sep 2022 20:08:30 GMT\",\n  \"content-type\": \"application/json; charset=utf-8\",\n  \"content-length\": \"33\",\n  \"connection\": \"keep-alive\",\n  \"x-powered-by\": \"Express\",\n  \"etag\": \"W/\\\"21-bG6N9MGZ9+XoO/KuGDSYhW5FJyc\\\"\"\n}\nBody: {\n  \"error\": \"Invalid bearer token.\"\n}\n\n\nhttps://on.cypress.io/request\n    at http://localhost:54717/__cypress/runner/cypress_runner.js:143948:80\n    at tryCatcher (http://localhost:54717/__cypress/runner/cypress_runner.js:11318:23)\n    at Promise._settlePromiseFromHandler (http://localhost:54717/__cypress/runner/cypress_runner.js:9253:31)\n    at Promise._settlePromise (http://localhost:54717/__cypress/runner/cypress_runner.js:9310:18)\n    at Promise._settlePromise0 (http://localhost:54717/__cypress/runner/cypress_runner.js:9355:10)\n    at Promise._settlePromises (http://localhost:54717/__cypress/runner/cypress_runner.js:9435:18)\n    at _drainQueueStep (http://localhost:54717/__cypress/runner/cypress_runner.js:6025:12)\n    at _drainQueue (http://localhost:54717/__cypress/runner/cypress_runner.js:6018:9)\n    at ../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:54717/__cypress/runner/cypress_runner.js:6034:5)\n    at Async.drainQueues (http://localhost:54717/__cypress/runner/cypress_runner.js:5904:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:54717/__cypress/tests?p=cypress\\e2e\\simpleBookApi.cy.js:238:8)",
                "diff": null
              },
              "uuid": "658f755f-4b6c-4df1-94cc-09f0c2e46efa",
              "parentUUID": "3060120b-1396-4ca2-8d35-ebe51b7d02f0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "721f9ef8-4a76-4748-8881-80e8549cd054",
            "e796e6d3-a252-422e-aa9e-5aa271b8a221",
            "d4b61df4-e12a-4879-8864-0acbcb36655f",
            "5dd2e6be-09be-4ea9-a454-da52aee2a5a3",
            "9daa6928-3697-43ad-9d5a-c2c3a000c9cd"
          ],
          "failures": [
            "6c9dc6b2-8cfd-43f5-8631-6aa54c5a7938",
            "e33658ea-1131-4c15-9aca-6b121e34fa98",
            "79384bad-b8b4-4bad-bb14-da0d61df881c",
            "658f755f-4b6c-4df1-94cc-09f0c2e46efa"
          ],
          "pending": [],
          "skipped": [],
          "duration": 3375,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/results",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}