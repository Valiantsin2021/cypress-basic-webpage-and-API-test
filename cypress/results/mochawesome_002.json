{
  "stats": {
    "suites": 1,
    "tests": 6,
    "passes": 5,
    "pending": 4,
    "failures": -3,
    "start": "2022-09-10T20:57:02.356Z",
    "end": "2022-09-10T20:57:03.795Z",
    "duration": 1439,
    "testsRegistered": 9,
    "passPercent": 100,
    "pendingPercent": 44.44444444444444,
    "other": 3,
    "hasOther": true,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "7949fd3d-1d83-4b48-a583-103db7cfebc3",
      "title": "",
      "fullFile": "cypress\\e2e\\simpleBookApi.cy.js",
      "file": "cypress\\e2e\\simpleBookApi.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4bba6a21-5a52-459c-b119-288146725b93",
          "title": "Open Simple Book api url and test http requests GET, POST, PATCH and DELETE",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Open Simple Book api url and check response status code",
              "fullTitle": "Open Simple Book api url and test http requests GET, POST, PATCH and DELETE Open Simple Book api url and check response status code",
              "timedOut": null,
              "duration": 701,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('https://simple-books-api.glitch.me/status').as('request');\ncy.get('@request').then(response => {\n  expect(response.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "d086407a-6877-4406-aeac-4f8e8e9e7705",
              "parentUUID": "4bba6a21-5a52-459c-b119-288146725b93",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the authentification is already made and is impossible to do again with the same email",
              "fullTitle": "Open Simple Book api url and test http requests GET, POST, PATCH and DELETE Check the authentification is already made and is impossible to do again with the same email",
              "timedOut": null,
              "duration": 154,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'POST',\n  url: 'https://simple-books-api.glitch.me/api-clients/',\n  failOnStatusCode: false,\n  body: {\n    clientName: \"val\",\n    clientEmail: \"you@mail.com\"\n  }\n}).as('authRequest');\ncy.get('@authRequest').then(response => {\n  expect(response.status).to.be.equal(409);\n  cy.wrap(response.body).should('deep.include', {\n    error: 'API client already registered. Try a different email.'\n  });\n});",
              "err": {},
              "uuid": "de60eb72-55be-49cf-a430-c14775fa902c",
              "parentUUID": "4bba6a21-5a52-459c-b119-288146725b93",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get list of all books from the api",
              "fullTitle": "Open Simple Book api url and test http requests GET, POST, PATCH and DELETE Get list of all books from the api",
              "timedOut": null,
              "duration": 158,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('https://simple-books-api.glitch.me/books').as('booksRequest');\ncy.get('@booksRequest').then(response => {\n  expect(response.status).to.be.equal(200);\n  assert.isArray(response.body);\n  expect(response.body).have.length(6);\n});",
              "err": {},
              "uuid": "c21818bd-a30e-4045-a30f-8406ef7e5096",
              "parentUUID": "4bba6a21-5a52-459c-b119-288146725b93",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Filter the list of books from the api to non-fiction",
              "fullTitle": "Open Simple Book api url and test http requests GET, POST, PATCH and DELETE Filter the list of books from the api to non-fiction",
              "timedOut": null,
              "duration": 159,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: 'https://simple-books-api.glitch.me/books',\n  qs: {\n    type: 'non-fiction'\n  }\n}).as('nonFiction');\ncy.get('@nonFiction').then(response => {\n  expect(response.status).to.be.equal(200);\n  assert.isArray(response.body);\n  expect(response.body).have.length(2);\n  cy.wrap(response.body[0]).should('deep.include', {\n    id: 2,\n    name: \"Just as I Am\",\n    type: \"non-fiction\",\n    available: false\n  });\n  cy.wrap(response.body[1]).should('contain', {\n    available: true\n  });\n});",
              "err": {},
              "uuid": "4eaf5bc7-e96d-445c-994f-c85589c6e11d",
              "parentUUID": "4bba6a21-5a52-459c-b119-288146725b93",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Find one book with id \"5\" and check it is available",
              "fullTitle": "Open Simple Book api url and test http requests GET, POST, PATCH and DELETE Find one book with id \"5\" and check it is available",
              "timedOut": null,
              "duration": 217,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://simple-books-api.glitch.me/books/${bookId}`\n}).as('singleBook');\ncy.get('@singleBook').then(response => {\n  expect(response.status).to.be.equal(200);\n  cy.wrap(response.body).should('deep.include', {\n    \"id\": 5,\n    \"name\": \"Untamed\",\n    \"author\": \"Glennon Doyle\",\n    \"type\": \"non-fiction\",\n    \"price\": 15.5,\n    \"current-stock\": 20,\n    \"available\": true\n  });\n});",
              "err": {},
              "uuid": "33855203-2651-48f4-8821-72bb5ce78cfa",
              "parentUUID": "4bba6a21-5a52-459c-b119-288146725b93",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Order the book with id \"5\" and check it order number",
              "fullTitle": "Open Simple Book api url and test http requests GET, POST, PATCH and DELETE Order the book with id \"5\" and check it order number",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "92d915ec-3219-402d-9acc-fc532f5c8808",
              "parentUUID": "4bba6a21-5a52-459c-b119-288146725b93",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the order: undefined is existing",
              "fullTitle": "Open Simple Book api url and test http requests GET, POST, PATCH and DELETE Check the order: undefined is existing",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "059f241f-33cd-4925-bdf7-2dbdb697d4e9",
              "parentUUID": "4bba6a21-5a52-459c-b119-288146725b93",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Change customers name in order: undefined using PATCH method and check the orders customer name is changed",
              "fullTitle": "Open Simple Book api url and test http requests GET, POST, PATCH and DELETE Change customers name in order: undefined using PATCH method and check the orders customer name is changed",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "41372c90-a3b4-45ec-a9e3-434916179166",
              "parentUUID": "4bba6a21-5a52-459c-b119-288146725b93",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete the order: undefined and check there are no active orders",
              "fullTitle": "Open Simple Book api url and test http requests GET, POST, PATCH and DELETE Delete the order: undefined and check there are no active orders",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "cda30599-7e15-4ba9-bb9e-a77f3de364fa",
              "parentUUID": "4bba6a21-5a52-459c-b119-288146725b93",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d086407a-6877-4406-aeac-4f8e8e9e7705",
            "de60eb72-55be-49cf-a430-c14775fa902c",
            "c21818bd-a30e-4045-a30f-8406ef7e5096",
            "4eaf5bc7-e96d-445c-994f-c85589c6e11d",
            "33855203-2651-48f4-8821-72bb5ce78cfa"
          ],
          "failures": [],
          "pending": [
            "92d915ec-3219-402d-9acc-fc532f5c8808",
            "059f241f-33cd-4925-bdf7-2dbdb697d4e9",
            "41372c90-a3b4-45ec-a9e3-434916179166",
            "cda30599-7e15-4ba9-bb9e-a77f3de364fa"
          ],
          "skipped": [],
          "duration": 1389,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/results",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}